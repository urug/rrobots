#!/usr/bin/env ruby
require "fileutils"

tournament_dir = ARGV.first
unless tournament_dir
  puts "please run loop with a single argument. The argument should point to a directory containing an 'entrants.txt' file (see https://gist.github.com/mmmries/1fe77806a5935eb1261d) for an example."
  exit 1
end

def update_repos_and_get_bot_paths(tournament_dir)
  entrants_filepath = File.join(tournament_dir, "entrants.txt")
  entrants_dir = File.join(tournament_dir, "entrants")
  `cd #{tournament_dir} && git pull`
  entrants = File.readlines(entrants_filepath).map(&:chomp)
  bot_paths = []
  FileUtils.mkdir_p(entrants_dir)
  entrants.each do |entrant_clone_url|
    entrant_name = ::File.basename(entrant_clone_url, ".git")
    entrant_dir = ::File.join(entrants_dir, entrant_name)
    if File.exist?(entrant_dir)
      `cd #{entrant_dir} && git pull`
    else
      `git clone #{entrant_clone_url} #{entrant_dir}`
    end
    Dir[File.join(entrant_dir, "*.rb")].each do |bot_path|
      bot_paths << bot_path
    end
  end
  bot_paths
end

# The Main Runloop
loop do
  bot_paths = update_repos_and_get_bot_paths(tournament_dir)
  selected_bot_paths = bot_paths.shuffle.take(6)
  puts "picked #{selected_bot_paths.size} of #{bot_paths.size} possible bots"
  `bundle exec rrobots #{bot_paths.join(" ")}`
end
